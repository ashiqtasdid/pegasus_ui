version: '3.8'

services:
  # API Service (you'll need to replace this with your actual API configuration)
  api:
    image: pegasus-api:latest  # Replace with your actual API image name
    container_name: pegasus-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    networks:
      - pegasus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Add your API-specific volumes and environment files
    # volumes:
    #   - ./api-data:/app/data
    #   - ./api-logs:/app/logs
    # env_file:
    #   - .env.api

  # Next.js Frontend Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    image: pegasus-frontend:latest
    container_name: pegasus-frontend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - API_URL=http://api:3000
      - PORT=3001
      - HOSTNAME=0.0.0.0
    depends_on:
      api:
        condition: service_healthy
    networks:
      - pegasus-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./logs:/app/logs:rw
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: pegasus-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      # - "443:443"  # Uncomment for HTTPS
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./ssl:/etc/nginx/ssl:ro  # Uncomment for HTTPS
    depends_on:
      frontend:
        condition: service_healthy
      api:
        condition: service_healthy
    networks:
      - pegasus-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  pegasus-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Optional: Add named volumes for persistent data
volumes:
  api_data:
    driver: local
  frontend_logs:
    driver: local
