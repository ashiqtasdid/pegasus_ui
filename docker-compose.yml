version: '3.8'

services:
  # API Service (assumed to exist)
  api:
    image: pegasus-api:latest  # Replace with your actual API image
    container_name: pegasus-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    networks:
      - pegasus-network
    # Add volumes, environment files, or other configurations as needed
    # volumes:
    #   - ./api-data:/app/data
    # env_file:
    #   - .env.api

  # Next.js Frontend Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pegasus-frontend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - API_URL=http://api:3000
      - PORT=3001
    depends_on:
      - api
    networks:
      - pegasus-network
    # Optional: Add health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Nginx reverse proxy
  # nginx:
  #   image: nginx:alpine
  #   container_name: pegasus-nginx
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     - ./ssl:/etc/nginx/ssl
  #   depends_on:
  #     - frontend
  #     - api
  #   networks:
  #     - pegasus-network

networks:
  pegasus-network:
    driver: bridge

# Optional: Add volumes for persistent data
# volumes:
#   postgres_data:
#   redis_data:
